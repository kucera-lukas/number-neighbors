name: Continuous Integration

on:
  push:
    branches: [main]

  pull_request:

jobs:
  java:
    name: JDK ${{ matrix.java }}
    runs-on: ${{ matrix.os }}

    permissions:
      contents: read

    strategy:
      matrix:
        os: [ubuntu-latest]
        java: [17]
        distribution: [temurin]

    steps:
      - name: Git Checkout
        uses: actions/checkout@v3

      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java }}
          distribution: ${{ matrix.distribution }}
          cache: maven

      - name: Build with Maven
        run: |
          mvn clean install --batch-mode --update-snapshots --show-version -DskipTests=true

  terraform:
    name: terraform
    runs-on: ${{ matrix.os }}

    permissions:
      contents: read
      pull-requests: write

    strategy:
      matrix:
        os: [ubuntu-latest]
        terraform: [1.3.6]

    defaults:
      run:
        working-directory: infrastructure/terraform

    steps:
      - name: Git Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform ${{ matrix.terraform }}
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: $ {{ matrix.terraform }}

      - name: TFLint cache plugin directory
        uses: actions/cache@v3
        with:
          path: ~/.tflint.d/plugins
          key: ${{ matrix.os }}-tflint-${{ hashFiles('.tflint.hcl') }}

      - name: Setup TFLint
        uses: terraform-linters/setup-tflint@v3
        with:
          tflint_version: latest

      - name: Terraform fmt
        run: terraform fmt -check

      - name: Terraform validate
        run: terraform validate -no-color

      - name: Init TFLint
        run: tflint --init

      - name: Run TFLint
        run: tflint -f compact

      - name: Run tfsec PR commenter
        uses: aquasecurity/tfsec-pr-commenter-action@v1.3.1
        with:
          tfsec_version: latest
          github_token: ${{ github.token }}

  web:
    name: web
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [18]

    defaults:
      run:
        working-directory: web

    steps:
      - name: Git Checkout
        uses: actions/checkout@v3

      - name: Setup Node ${{ matrix.node }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: "npm"
          cache-dependency-path: web/package-lock.json

      - name: Install packages
        run: npm ci

      - name: Prettier
        run: npm run fmt:check

      - name: ESLint
        run: npm run lint:fix
